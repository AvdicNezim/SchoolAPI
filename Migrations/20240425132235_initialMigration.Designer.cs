// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolAPI.Data;



#nullable disable

namespace SchoolAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240425132235_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("coursesid")
                        .HasColumnType("int");

                    b.Property<int>("studentsid")
                        .HasColumnType("int");

                    b.HasKey("coursesid", "studentsid");

                    b.HasIndex("studentsid");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("SchoolAPI.Models.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numberOfClasses")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("courses");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Microsoft Web Services",
                            numberOfClasses = 32
                        },
                        new
                        {
                            id = 2,
                            name = "ASP.NET Core MVC",
                            numberOfClasses = 44
                        },
                        new
                        {
                            id = 3,
                            name = "Introduction To Web Development",
                            numberOfClasses = 32
                        });
                });

            modelBuilder.Entity("SchoolAPI.Models.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("students");

                    b.HasData(
                        new
                        {
                            id = 1,
                            firstName = "John",
                            lastName = "Doe"
                        },
                        new
                        {
                            id = 2,
                            firstName = "Mark",
                            lastName = "Stone"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("SchoolAPI.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("coursesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolAPI.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("studentsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
